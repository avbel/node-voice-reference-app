{"version":3,"file":"models.js","sourceRoot":"","sources":["models.ts"],"names":[],"mappings":";AAAA,2BAAgD,UAAU,CAAC,CAAA;AAC3D,2BAA4B,UAAU,CAAC,CAAA;AAEvC,MAAM,MAAM,GAAG,kCAAkC,CAAC;AAmBlD,MAAM,UAAU,GAAG,IAAI,iBAAM,CAAC;IAC7B,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACxD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;IAC1D,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC5C,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACxC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;CAC7B,CAAC,CAAC;AAEH,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,QAAgB;IACjD,MAAM,CAAC,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;QACxC,eAAI,CAAC,QAAQ,GAAG,MAAM,EAAE,EAAE,EAAE,CAAC,GAAQ,EAAE,IAAS;YAC/C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,QAAgB;IACrD,MAAM,CAAC,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM;QAC3C,kBAAO,CAAC,QAAQ,GAAG,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,GAAQ,EAAE,MAAe;YACvE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAGH,mBAAkC,QAAkB;IACnD,MAAM,CAAC;QACN,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAiB;KACxD,CAAC;AACH,CAAC;AAJD;2BAIC,CAAA","sourcesContent":["import {Mongoose, Model, Schema, Document} from 'mongoose';\r\nimport {hash, compare} from 'bcryptjs';\r\n\r\nconst pepper = 'JixuYF0AUXLggGNqTP1N1DQi2fEQZgcP';\r\n\r\nexport interface IUser extends Document {\r\n\tuserName: string;\r\n\tareaCode: string;\r\n\tphoneNumber: string;\r\n\tendpointId: string;\r\n\tsipUri: string;\r\n\tsipPassword: string;\r\n\tgreetingUrl: string;\r\n\tsetPassword(password: string): Promise<void>;\r\n\tcomparePassword(password: string): Promise<boolean>;\r\n}\r\n\r\n\r\nexport interface IModels {\r\n\tuser: Model<IUser>;\r\n}\r\n\r\nconst userSchema = new Schema({\r\n\tuserName: { type: String, required: true, unique: true },\r\n\tpasswordHash: { type: String, required: true },\r\n\tareaCode: { type: String, required: true },\r\n\tphoneNumber: { type: String, required: true, index: true },\r\n\tendpointId: { type: String, required: true },\r\n\tsipUri: { type: String, required: true },\r\n\tsipPassword: { type: String, required: true },\r\n\tgreetingUrl: { type: String },\r\n});\r\n\r\nuserSchema.method('setPassword', (password: string): Promise<void> => {\r\n\treturn new Promise<void>((resolve, reject) => {\r\n\t\thash(password + pepper, 10, (err: any, hash: any) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn reject(err);\r\n\t\t\t}\r\n\t\t\tthis.passwordHash = hash;\r\n\t\t\treturn resolve(hash);\r\n\t\t});\r\n\t});\r\n});\r\n\r\nuserSchema.method('comparePassword', (password: string): Promise<boolean> => {\r\n\treturn new Promise<boolean>((resolve, reject) => {\r\n\t\tcompare(password + pepper, this.passwordHash, (err: any, result: boolean) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn reject(err);\r\n\t\t\t}\r\n\t\t\treturn resolve(result);\r\n\t\t});\r\n\t});\r\n});\r\n\r\n\r\nexport default function getModels(mongoose: Mongoose): IModels {\r\n\treturn {\r\n\t\tuser: mongoose.model('user', userSchema) as Model<IUser>\r\n\t};\r\n}\r\n"]}